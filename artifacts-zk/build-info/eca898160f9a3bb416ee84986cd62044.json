{"id":"eca898160f9a3bb416ee84986cd62044","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/bulkSender.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nerror msgValueIncorrect();\nerror etherNotSent();\n\ncontract bulkSender {\n\n    function bulkSend(address[] memory myArray) public payable {\n        if(msg.value != myArray.length) revert msgValueIncorrect();\n        for (uint256 i = 0; i < myArray.length;) {\n            (bool sent, ) = myArray[i].call{value: 1}(\"\");\n            if(sent == false) revert etherNotSent();\n            unchecked { i += 1; }\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Linux.g++","zk_version":"1.3.10","sources":{"contracts/bulkSender.sol":{"id":0,"ast":{"absolutePath":"contracts/bulkSender.sol","exportedSymbols":{"bulkSender":[55],"etherNotSent":[5],"msgValueIncorrect":[3]},"id":56,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:0"},{"errorSelector":"74ba3bb6","id":3,"name":"msgValueIncorrect","nameLocation":"63:17:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"80:2:0"},"src":"57:26:0"},{"errorSelector":"c132f809","id":5,"name":"etherNotSent","nameLocation":"90:12:0","nodeType":"ErrorDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"102:2:0"},"src":"84:21:0"},{"abstract":false,"baseContracts":[],"canonicalName":"bulkSender","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":55,"linearizedBaseContracts":[55],"name":"bulkSender","nameLocation":"116:10:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":53,"nodeType":"Block","src":"193:282:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"206:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"210:5:0","memberName":"value","nodeType":"MemberAccess","src":"206:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":13,"name":"myArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"219:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227:6:0","memberName":"length","nodeType":"MemberAccess","src":"219:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"206:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19,"nodeType":"IfStatement","src":"203:58:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":16,"name":"msgValueIncorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"242:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"242:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18,"nodeType":"RevertStatement","src":"235:26:0"}},{"body":{"id":51,"nodeType":"Block","src":"312:157:0","statements":[{"assignments":[29,null],"declarations":[{"constant":false,"id":29,"mutability":"mutable","name":"sent","nameLocation":"332:4:0","nodeType":"VariableDeclaration","scope":51,"src":"327:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28,"name":"bool","nodeType":"ElementaryTypeName","src":"327:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":38,"initialValue":{"arguments":[{"hexValue":"","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"368:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"baseExpression":{"id":30,"name":"myArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"342:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":32,"indexExpression":{"id":31,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"350:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"342:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"353:4:0","memberName":"call","nodeType":"MemberAccess","src":"342:15:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"31","id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"365:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"src":"342:25:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"342:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"326:45:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":39,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"388:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"396:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"388:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45,"nodeType":"IfStatement","src":"385:39:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":42,"name":"etherNotSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"410:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"410:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":44,"nodeType":"RevertStatement","src":"403:21:0"}},{"id":50,"nodeType":"UncheckedBlock","src":"438:21:0","statements":[{"expression":{"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":46,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"450:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"455:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"450:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":49,"nodeType":"ExpressionStatement","src":"450:6:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":24,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"291:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":25,"name":"myArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"295:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"303:6:0","memberName":"length","nodeType":"MemberAccess","src":"295:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"291:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":52,"initializationExpression":{"assignments":[21],"declarations":[{"constant":false,"id":21,"mutability":"mutable","name":"i","nameLocation":"284:1:0","nodeType":"VariableDeclaration","scope":52,"src":"276:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":23,"initialValue":{"hexValue":"30","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"276:13:0"},"nodeType":"ForStatement","src":"271:198:0"}]},"functionSelector":"77413cb6","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"bulkSend","nameLocation":"143:8:0","nodeType":"FunctionDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"myArray","nameLocation":"169:7:0","nodeType":"VariableDeclaration","scope":54,"src":"152:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"152:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7,"nodeType":"ArrayTypeName","src":"152:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"151:26:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"193:0:0"},"scope":55,"src":"134:341:0","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":56,"src":"107:370:0","usedErrors":[3,5]}],"src":"32:445:0"}}},"contracts":{"contracts/bulkSender.sol":{"bulkSender":{"abi":[{"inputs":[],"name":"etherNotSent","type":"error"},{"inputs":[],"name":"msgValueIncorrect","type":"error"},{"inputs":[{"internalType":"address[]","name":"myArray","type":"address[]"}],"name":"bulkSend","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"etherNotSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"msgValueIncorrect\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"myArray\",\"type\":\"address[]\"}],\"name\":\"bulkSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bulkSender.sol\":\"bulkSender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/bulkSender.sol\":{\"keccak256\":\"0x395ff4957786fa469c8b38280c803407db1135fda337b3dbfcaf6ab0b96612f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e6727d03ef53b1d7c13313506d5f1047127043cd681334833a2ee20f671d4\",\"dweb:/ipfs/Qme7RkqMkAL3ooaBEh7yQPFPqUcY6GW1z42aKoxXsC39m6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"bulkSender.sol:bulkSender\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s!\t4, r3, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tadd\t@CPI0_4[0], r0, r4\n\tsub.s!\t32, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t0, r2, r6\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tadd\tr5, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_4[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_4[0], r3, r3\n\tand\t@CPI0_4[0], r4, r4\n\tsub!\tr4, r3, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r3, r3\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr1, r3, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_6[0], r3, r1\n\tjump.ge\t@.BB0_10\n\tshl.s\t5, r3, r4\n\tadd\t191, r4, r1\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[2]\n\tand\tr1, r5, r1\n\tsub.s!\t@CPI0_5[0], r1, r5\n\tjump.le\t@.BB0_12\n.BB0_10:\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tst.1\t64, r1\n\tst.1\t128, r3\n\tadd\t36, r2, r1\n\tadd\tr4, r1, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub!\tr2, r4, r4\n\tjump.le\t@.BB0_13\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_13:\n\tsub.s!\t0, r3, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_17\n\tadd\t160, r0, r3\n.BB0_15:\n\tptr.add\tstack[@ptr_calldata], r1, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_7[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr3, r4, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_15\n\tld.1\t128, r3\n.BB0_17:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB0_21\n\tld.1\t128, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_23\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r9\n.BB0_24:\n\tshl.s\t5, r9, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB0_25\n\tadd\tstack[@returndatasize], r0, r1\n\tadd\tstack-[1], r0, r2\n\tjump\t@.BB0_27\n.BB0_25:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r5\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_27:\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB0_28\n\tsub.s!\t@CPI0_5[0], r1, r3\n\tjump.gt\t@.BB0_10\n\tadd\t63, r1, r3\n\tadd\tstack-[2], r0, r4\n\tand\tr3, r4, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_10\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_37\n\tadd\tr0, r0, r6\n.BB0_34:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_34\n.BB0_37:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_28\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r1\n\tshl.s\t3, r5, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB0_28:\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB0_36\n\tadd\t1, r9, r9\n\tld.1\t128, r1\n\tsub!\tr9, r1, r1\n\tjump.lt\t@.BB0_24\n.BB0_23:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_21:\n\tld.1\t64, r1\n\tadd\t@CPI0_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tld.1\t64, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell 53940493052110396053092178114929041828797185556214386298072017031572882456576\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 18446744073709551616\nCPI0_7:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_8:\n\t.cell 52797336099452434601287997197192511272031351023826888661780782656812333662208\nCPI0_9:\n\t.cell 316912650057057350374175801344\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_11:\n\t.cell -28405655231773339186865215245487663411985402156206803549948351868442746290176\nCPI0_12:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_13:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"0004000000000002000300000000000200000000030100190000006003300270000000370430019700030000004103550002000000010355000000370030019d000100000000001f0000008001000039000000400010043f0000000101200190000000470000c13d0000000003000031000000040130008c000000560000413d0000000201000367000000000201043b00000039022001970000003a0220009c000000560000c13d000000040230008a0000003b04000041000000200520008c000000000500001900000000050440190000003b02200197000000000620004c000000000400a0190000003b0220009c00000000020500190000000002046019000000000220004c000000560000c13d0000000402100370000000000202043b0000003c0420009c000000560000213d00000023042000390000003b05000041000000000634004b000000000600001900000000060580190000003b033001970000003b04400197000000000734004b0000000005008019000000000334013f0000003b0330009c00000000030600190000000003056019000000000330004c000000560000c13d0000000403200039000000000131034f000000000301043b0000003d0130009c000000410000813d0000000504300210000000bf01400039000000200500008a000200000005001d000000000151016f0000003c0510009c0000004f0000a13d000000430100004100000000001004350000004101000039000000040010043f0000004401000041000000d7000104300000000001000416000000000110004c000000560000c13d0000002001000039000001000010044300000120000004430000003801000041000000d60001042e000000400010043f000000800030043f000000240120003900000000021400190000000004000031000000000442004b000000580000a13d0000000001000019000000d700010430000000000330004c0000000003000019000000650000613d000000a0030000390000000204100367000000000404043b0000003e0540009c000000560000213d00000000034304360000002001100039000000000421004b0000005c0000413d000000800300043d0000000001000416000000000131004b000000be0000c13d000000800100043d000000000110004c000000bc0000613d0000000101000039000100000001001d00000000090000190000000501900210000000a001100039000000000201043300000000010004140000003e04200197000000040240008c000000780000c13d00000001010000310000000102000029000000880000013d0000003702000041000000370310009c0000000001028019000000c00110021000000041011001c7000080090200003900000001030000390000000005000019000300000009001d00d500d00000040f0000000309000029000000010220018f00030000000103550000006001100270000100370010019d0000003701100197000000000310004c000000b60000613d0000003c0310009c000000410000213d0000003f031000390000000204000029000000000443016f000000400300043d0000000004430019000000000534004b000000000500001900000001050040390000003c0640009c000000410000213d0000000105500190000000410000c13d000000400040043f0000000001130436000000030300036700000001050000310000000504500272000000a70000613d000000000600001900000005076002100000000008710019000000000773034f000000000707043b00000000007804350000000106600039000000000746004b0000009f0000413d0000001f05500190000000b60000613d0000000504400210000000000343034f00000000014100190000000304500210000000000501043300000000054501cf000000000545022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000353019f0000000000310435000000000120004c000000c70000613d0000000109900039000000800100043d000000000119004b0000006e0000413d0000000001000019000000d60001042e000000400100043d0000003f0200004100000000002104350000003702000041000000370310009c0000000001028019000000400110021000000040011001c7000000d700010430000000400100043d000000420200004100000000002104350000003702000041000000370310009c0000000001028019000000400110021000000040011001c7000000d700010430000000d3002104210000000102000039000000000001042d0000000002000019000000000001042d000000d500000432000000d60001042e000000d700010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000077413cb6000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff74ba3bb60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000200000000000000000000000000000000000000000000000000000000000000c132f809000000000000000000000000000000000000000000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d186e9af7d62afdc81cf511df796b5cf3d5ac8c1dad59d6d2756d42450b2df1d"},"methodIdentifiers":{"bulkSend(address[])":"77413cb6"}},"irOptimized":"/// @use-src 0:\"contracts/bulkSender.sol\"\nobject \"bulkSender_55\" {\n    code {\n        {\n            /// @src 0:107:477  \"contract bulkSender {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"bulkSender_55_deployed\")\n            codecopy(_1, dataoffset(\"bulkSender_55_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/bulkSender.sol\"\n    object \"bulkSender_55_deployed\" {\n        code {\n            {\n                /// @src 0:107:477  \"contract bulkSender {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    if eq(0x77413cb6, shr(224, calldataload(_3)))\n                    {\n                        let _4 := 32\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let _6 := calldataload(add(_2, offset))\n                        let _7 := 36\n                        if gt(_6, _5)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, _7)\n                        }\n                        let _8 := 5\n                        let _9 := shl(_8, _6)\n                        let dst := allocate_memory(add(_9, _4))\n                        let dst_1 := dst\n                        mstore(dst, _6)\n                        dst := add(dst, _4)\n                        let srcEnd := add(add(offset, _9), _7)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset, _7)\n                        for { } lt(src, srcEnd) { src := add(src, _4) }\n                        {\n                            let value := calldataload(src)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                            mstore(dst, value)\n                            dst := add(dst, _4)\n                        }\n                        /// @src 0:203:261  \"if(msg.value != myArray.length) revert msgValueIncorrect()\"\n                        if /** @src 0:206:233  \"msg.value != myArray.length\" */ iszero(eq(/** @src 0:206:215  \"msg.value\" */ callvalue(), /** @src 0:107:477  \"contract bulkSender {...\" */ mload(/** @src 0:219:233  \"myArray.length\" */ dst_1)))\n                        /// @src 0:203:261  \"if(msg.value != myArray.length) revert msgValueIncorrect()\"\n                        {\n                            /// @src 0:242:261  \"msgValueIncorrect()\"\n                            let _10 := /** @src 0:107:477  \"contract bulkSender {...\" */ mload(_1)\n                            /// @src 0:242:261  \"msgValueIncorrect()\"\n                            mstore(_10, shl(225, 0x3a5d1ddb))\n                            revert(_10, /** @src 0:107:477  \"contract bulkSender {...\" */ _2)\n                        }\n                        /// @src 0:276:289  \"uint256 i = 0\"\n                        let var_i := /** @src 0:107:477  \"contract bulkSender {...\" */ _3\n                        /// @src 0:271:469  \"for (uint256 i = 0; i < myArray.length;) {...\"\n                        for { }\n                        /** @src 0:365:366  \"1\" */ 0x01\n                        /// @src 0:276:289  \"uint256 i = 0\"\n                        { }\n                        {\n                            /// @src 0:291:309  \"i < myArray.length\"\n                            if iszero(lt(var_i, /** @src 0:107:477  \"contract bulkSender {...\" */ mload(/** @src 0:295:309  \"myArray.length\" */ dst_1)))\n                            /// @src 0:291:309  \"i < myArray.length\"\n                            { break }\n                            /// @src 0:365:366  \"1\"\n                            let _11 := 0x01\n                            /// @src 0:342:371  \"myArray[i].call{value: 1}(\\\"\\\")\"\n                            let expr_component := call(gas(), /** @src 0:107:477  \"contract bulkSender {...\" */ and(mload(add(add(dst_1, shl(_8, var_i)), _4)), sub(shl(160, 1), 1)), /** @src 0:365:366  \"1\" */ _11, /** @src 0:107:477  \"contract bulkSender {...\" */ _3, _3, _3, _3)\n                            switch returndatasize()\n                            case 0 { }\n                            default {\n                                let _12 := returndatasize()\n                                if gt(_12, _5)\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x41)\n                                    revert(_3, _7)\n                                }\n                                let memPtr := allocate_memory(add(and(add(_12, 0x1f), not(31)), _4))\n                                mstore(memPtr, _12)\n                                returndatacopy(add(memPtr, _4), _3, returndatasize())\n                            }\n                            /// @src 0:385:424  \"if(sent == false) revert etherNotSent()\"\n                            if /** @src 0:107:477  \"contract bulkSender {...\" */ iszero(/** @src 0:388:401  \"sent == false\" */ expr_component)\n                            /// @src 0:385:424  \"if(sent == false) revert etherNotSent()\"\n                            {\n                                /// @src 0:410:424  \"etherNotSent()\"\n                                let _13 := /** @src 0:107:477  \"contract bulkSender {...\" */ mload(_1)\n                                /// @src 0:410:424  \"etherNotSent()\"\n                                mstore(_13, shl(224, 0xc132f809))\n                                revert(_13, /** @src 0:107:477  \"contract bulkSender {...\" */ _2)\n                            }\n                            /// @src 0:450:456  \"i += 1\"\n                            var_i := /** @src 0:107:477  \"contract bulkSender {...\" */ add(/** @src 0:450:456  \"i += 1\" */ var_i, /** @src 0:365:366  \"1\" */ _11)\n                        }\n                        /// @src 0:107:477  \"contract bulkSender {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122055abb1f4c107e8ecc76750138ceda34517c7e954efe922637944c7b044e6be8f64736f6c63430008110033\"\n    }\n}\n","hash":"0100004721f72ff28af96b583f9457e2050a956653c120743feff34819f408b2","factoryDependencies":{}}}}}}