{"id":"9418d904954e764325659f33251e70ea","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/bulkSender.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nerror msgValueIncorrect();\nerror etherNotSent();\n\ncontract bulkSender {\n\n    function bulkSend(address[] memory myArray) public payable {\n        if(msg.value != (myArray.length * (1 ether)) ) revert msgValueIncorrect();\n        for (uint256 i = 0; i < myArray.length;) {\n            (bool sent, ) = myArray[i].call{value: 1 ether}(\"\");\n            if(sent == false) revert etherNotSent();\n            unchecked { i += 1; }\n        }\n    }\n}"},"contracts/Greeter.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity 0.8.17;\n\ncontract Greeter {\n    \n    string public greeting;\n\n    function setGreeting(string memory _greeting) public { //calldata is immutable cheaper than memory. \n        greeting = _greeting;\n    }\n    \n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Linux.g++","zk_version":"1.3.10","sources":{"contracts/Greeter.sol":{"id":0,"ast":{"absolutePath":"contracts/Greeter.sol","exportedSymbols":{"Greeter":[14]},"id":15,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"37:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Greeter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":14,"linearizedBaseContracts":[14],"name":"Greeter","nameLocation":"71:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ef690cc0","id":3,"mutability":"mutable","name":"greeting","nameLocation":"104:8:0","nodeType":"VariableDeclaration","scope":14,"src":"90:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2,"name":"string","nodeType":"ElementaryTypeName","src":"90:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":12,"nodeType":"Block","src":"172:83:0","statements":[{"expression":{"id":10,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"228:8:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9,"name":"_greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"239:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"228:20:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11,"nodeType":"ExpressionStatement","src":"228:20:0"}]},"functionSelector":"a4136862","id":13,"implemented":true,"kind":"function","modifiers":[],"name":"setGreeting","nameLocation":"128:11:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_greeting","nameLocation":"154:9:0","nodeType":"VariableDeclaration","scope":13,"src":"140:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"140:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"139:25:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"172:0:0"},"scope":14,"src":"119:136:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":15,"src":"62:200:0","usedErrors":[]}],"src":"37:226:0"}},"contracts/bulkSender.sol":{"id":1,"ast":{"absolutePath":"contracts/bulkSender.sol","exportedSymbols":{"bulkSender":[74],"etherNotSent":[20],"msgValueIncorrect":[18]},"id":75,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":16,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:1"},{"errorSelector":"74ba3bb6","id":18,"name":"msgValueIncorrect","nameLocation":"63:17:1","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[],"src":"80:2:1"},"src":"57:26:1"},{"errorSelector":"c132f809","id":20,"name":"etherNotSent","nameLocation":"90:12:1","nodeType":"ErrorDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"102:2:1"},"src":"84:21:1"},{"abstract":false,"baseContracts":[],"canonicalName":"bulkSender","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":74,"linearizedBaseContracts":[74],"name":"bulkSender","nameLocation":"116:10:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":72,"nodeType":"Block","src":"193:303:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":26,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"206:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"210:5:1","memberName":"value","nodeType":"MemberAccess","src":"206:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":28,"name":"myArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"220:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228:6:1","memberName":"length","nodeType":"MemberAccess","src":"220:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"31","id":30,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"238:7:1","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":31,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"237:9:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"220:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":33,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"219:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"206:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":38,"nodeType":"IfStatement","src":"203:73:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":35,"name":"msgValueIncorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"257:17:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"257:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"RevertStatement","src":"250:26:1"}},{"body":{"id":70,"nodeType":"Block","src":"327:163:1","statements":[{"assignments":[48,null],"declarations":[{"constant":false,"id":48,"mutability":"mutable","name":"sent","nameLocation":"347:4:1","nodeType":"VariableDeclaration","scope":70,"src":"342:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":57,"initialValue":{"arguments":[{"hexValue":"","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"389:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"baseExpression":{"id":49,"name":"myArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"357:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":51,"indexExpression":{"id":50,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"365:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"357:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"368:4:1","memberName":"call","nodeType":"MemberAccess","src":"357:15:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"31","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"380:7:1","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"src":"357:31:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"357:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"341:51:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"409:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"417:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"409:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":64,"nodeType":"IfStatement","src":"406:39:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"etherNotSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"431:12:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"431:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63,"nodeType":"RevertStatement","src":"424:21:1"}},{"id":69,"nodeType":"UncheckedBlock","src":"459:21:1","statements":[{"expression":{"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":65,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"471:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"476:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"471:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":68,"nodeType":"ExpressionStatement","src":"471:6:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"306:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":44,"name":"myArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"310:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"318:6:1","memberName":"length","nodeType":"MemberAccess","src":"310:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"306:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":71,"initializationExpression":{"assignments":[40],"declarations":[{"constant":false,"id":40,"mutability":"mutable","name":"i","nameLocation":"299:1:1","nodeType":"VariableDeclaration","scope":71,"src":"291:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":42,"initialValue":{"hexValue":"30","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"303:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"291:13:1"},"nodeType":"ForStatement","src":"286:204:1"}]},"functionSelector":"77413cb6","id":73,"implemented":true,"kind":"function","modifiers":[],"name":"bulkSend","nameLocation":"143:8:1","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"myArray","nameLocation":"169:7:1","nodeType":"VariableDeclaration","scope":73,"src":"152:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"152:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":22,"nodeType":"ArrayTypeName","src":"152:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"151:26:1"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"193:0:1"},"scope":74,"src":"134:362:1","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":75,"src":"107:391:1","usedErrors":[18,20]}],"src":"32:466:1"}}},"contracts":{"contracts/Greeter.sol":{"Greeter":{"abi":[{"inputs":[],"name":"greeting","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"setGreeting","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0x44d73bcd2848f1768bf1cb8525c59932976d2aec0beee6a26694a5871af8668f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://bebd3179767eb22c94eeca7ca154ed26c583545fc654dea61a0ee1c770726ab5\",\"dweb:/ipfs/Qmdchar8FtbFwhkrr9x4y6X56GpBAYA8fZHwSvmJxd2H14\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Greeter.sol:Greeter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_38\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_4[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_4[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_4[0], r1, r1\n\tand\t@CPI0_4[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.ge\t@.BB0_12\n\tadd\t191, r1, r4\n\tsub.s\t32, r0, r2\n\tand\tr4, r2, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r4\n\tst.1\t128, r1\n\tadd\t36, r3, r4\n\tadd\tr1, r4, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tsub!\tr3, r5, r3\n\tjump.gt\t@.BB0_2\n\tand\t31, r1, r3\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB0_53\n\tadd\tr0, r0, r6\n.BB0_17:\n\tshl.s\t5, r6, r7\n\tptr.add\tr4, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_17\n.BB0_53:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_19\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tshl.s\t3, r3, r3\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_19:\n\tadd\t160, r1, r1\n\tst.1\tr1, r0\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_12\n\tsload\tr0, r3\n\tand!\t1, r3, r4\n\tshr.s\t1, r3, r3\n\tand\t127, r3, r5\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t31, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\tand\t1, r5, r5\n\tsub!\tr4, r5, r4\n\tjump.ne\t@.BB0_21\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_25\n\tadd\t31, r1, r4\n\tshr.s\t5, r4, r4\n\tadd\t@CPI0_5[0], r4, r4\n\tadd\t@CPI0_5[0], r0, r5\n\tsub.s!\t32, r1, r6\n\tadd.lt\tr5, r0, r4\n\tst.1\t0, r0\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_5[0], r3, r3\n\tsub!\tr4, r3, r5\n\tjump.ge\t@.BB0_25\n.BB0_26:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_26\n.BB0_25:\n\tsub.s!\t31, r1, r3\n\tjump.le\t@.BB0_35\n\tand!\tr1, r2, r3\n\tadd\t160, r0, r4\n\tadd\t@CPI0_5[0], r0, r2\n\tst.1\t0, r0\n\tjump.eq\t@.BB0_32\n\tadd\t@CPI0_5[0], r0, r2\n\tadd\t32, r0, r5\n\tadd\tr0, r0, r4\n.BB0_30:\n\tadd\tr5, r0, r6\n\tadd\t128, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr2, r5\n\tadd\t32, r6, r5\n\tadd\t1, r2, r2\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.lt\t@.BB0_30\n\tadd\t160, r6, r4\n.BB0_32:\n\tsub!\tr3, r1, r3\n\tjump.ge\t@.BB0_34\n\tshl.s\t3, r1, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r5\n\tshr\tr5, r3, r3\n\txor\tr3, r5, r3\n\tld.1\tr4, r4\n\tand\tr4, r3, r3\n\tsstore\tr2, r3\n.BB0_34:\n\tadd\t1, r0, r2\n\tshl.s\t1, r1, r3\n\tjump\t@.BB0_27\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_40\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_40:\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r3\n\tadd.eq\tr2, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\txor\tr4, r1, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_41\n.BB0_21:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_41:\n\tld.1\t64, r2\n\tst.1.inc\tr2, r3, r1\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB0_47\n\tst.1\t0, r0\n\tsub.s!\t0, r3, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_42\n\tadd\t@CPI0_5[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_50:\n\tadd\tr1, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_50\n\tjump\t@.BB0_42\n.BB0_47:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr1, r4\n\tsub.s!\t0, r3, r3\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_42:\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r5\n\tadd\tr5, r2, r3\n\tsub!\tr3, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r3, r6\n\tjump.gt\t@.BB0_12\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r3\n\tadd\t32, r0, r5\n\tst.1.inc\tr3, r5, r5\n\tld.1\tr2, r2\n\tst.1\tr5, r2\n\tsub.s!\t0, r2, r5\n\tjump.ne\t@.BB0_46\n\tadd\t64, r3, r5\n\tjump\t@.BB0_52\n.BB0_12:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_46:\n\tadd\t64, r3, r5\n\tadd\tr0, r0, r6\n.BB0_51:\n\tadd\tr6, r5, r7\n\tadd\tr1, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB0_51\n.BB0_52:\n\tadd\tr5, r2, r1\n\tst.1\tr1, r0\n\tadd\t95, r2, r1\n\tand\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t0, r1, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_37\n\tld.1\t160, r2\n.BB0_37:\n\tshl.s\t3, r1, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r1, r2\n.BB0_27:\n\tor\tr3, r2, r1\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 4016639168\nCPI0_3:\n\t.cell 2752735330\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_6:\n\t.cell 18446744073709551615\nCPI0_7:\n\t.cell 18446744073709551616\nCPI0_8:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"0002000000000002000100000001035500000060011002700000004c0010019d0000008001000039000000400010043f0000000101200190000000a70000c13d0000000001000031000000040110008c000000c00000413d0000000101000367000000000101043b000000e0011002700000004e0210009c000000af0000613d0000004f0110009c000000c00000c13d0000000001000416000000000110004c000000c00000c13d0000000001000031000000040210008a0000005003000041000000200420008c000000000400001900000000040340190000005002200197000000000520004c000000000300a019000000500220009c00000000020400190000000002036019000000000220004c000000c00000c13d00000001020003670000000403200370000000000303043b000000520430009c000000c00000213d00000023043000390000005005000041000000000614004b0000000006000019000000000605801900000050011001970000005004400197000000000714004b0000000005008019000000000114013f000000500110009c00000000010600190000000001056019000000000110004c000000c00000c13d0000000401300039000000000112034f000000000101043b000000530210009c000001000000813d000000bf04100039000000200200008a000000000424016f000000520540009c000001000000213d000000400040043f000000800010043f000000240430003900000000034100190000000005000031000000000353004b000000c00000213d0000001f0310018f00000001044003670000000505100272000000550000613d00000000060000190000000507600210000000000874034f000000000808043b000000a00770003900000000008704350000000106600039000000000756004b0000004d0000413d000000000630004c000000640000613d0000000505500210000000000454034f0000000303300210000000a005500039000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f0000000000350435000000a0011000390000000000010435000000800100043d000000520310009c000001000000213d000000000300041a000000010430019000000001033002700000007f0530018f00000000030560190000001f0530008c00000000050000190000000105002039000000010550018f000000000454004b000000ce0000c13d000000200430008c000000860000413d0000001f04100039000000050440027000000051044000410000005105000041000000200610008c000000000405401900000000000004350000001f0330003900000005033002700000005103300041000000000534004b000000860000813d000000000004041b0000000104400039000000000534004b000000820000413d0000001f0310008c0000011c0000a13d0000000003210170000000a004000039000000510200004100000000000004350000009a0000613d000000510200004100000020050000390000000004000019000000000605001900000080056000390000000005050433000000000052041b000000200560003900000001022000390000002004400039000000000734004b000000900000413d000000a004600039000000000313004b000000a40000813d0000000303100210000000f80330018f000000010500008a000000000335022f000000000353013f0000000004040433000000000334016f000000000032041b00000001020000390000000103100210000001260000013d0000000001000416000000000110004c000000c00000c13d0000002001000039000001000010044300000120000004430000004d010000410000012b0001042e0000000001000416000000000110004c000000c00000c13d000000040100008a00000000011000310000005002000041000000000310004c000000000300001900000000030240190000005001100197000000000410004c000000000200a019000000500110009c00000000010300190000000001026019000000000110004c000000c20000613d00000000010000190000012c00010430000000000400041a000000010540019000000001014002700000007f0210018f000000000301001900000000030260190000001f0130008c00000000010000190000000101002039000000000114013f0000000101100190000000d40000613d000000540100004100000000001004350000002201000039000000040010043f00000055010000410000012c00010430000000400200043d0000000001320436000000000550004c000000e60000613d0000000000000435000000000430004c0000000004000019000000ec0000613d000000510500004100000000040000190000000006410019000000000705041a000000000076043500000001055000390000002004400039000000000634004b000000de0000413d000000ec0000013d000001000500008a000000000454016f0000000000410435000000000330004c000000200400003900000000040060190000003f03400039000000200400008a000000000543016f0000000003250019000000000553004b00000000050000190000000105004039000000520630009c000001000000213d0000000105500190000001000000c13d000000400030043f0000002005000039000000000553043600000000020204330000000000250435000000000520004c000001060000c13d00000040053000390000010f0000013d000000540100004100000000001004350000004101000039000000040010043f00000055010000410000012c000104300000004005300039000000000600001900000000075600190000000008610019000000000808043300000000008704350000002006600039000000000726004b000001080000413d000000000125001900000000000104350000005f01200039000000000141016f0000004c020000410000004c0410009c00000000010280190000004c0430009c000000000203401900000040022002100000006001100210000000000121019f0000012b0001042e000000000210004c0000000002000019000001200000613d000000a00200043d0000000303100210000000010400008a000000000334022f000000000343013f000000000332016f0000000102100210000000000123019f000000000010041b00000000010000190000012b0001042e0000012a000004320000012b0001042e0000012c0001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000ef690cc000000000000000000000000000000000000000000000000000000000a41368628000000000000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000000000000100000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000025f85480547f5d6355094f7257285678ade7e3b6a5ec20450ce53c3065873707"},"methodIdentifiers":{"greeting()":"ef690cc0","setGreeting(string)":"a4136862"}},"irOptimized":"/// @use-src 0:\"contracts/Greeter.sol\"\nobject \"Greeter_14\" {\n    code {\n        {\n            /// @src 0:62:262  \"contract Greeter {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Greeter_14_deployed\")\n            codecopy(_1, dataoffset(\"Greeter_14_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/Greeter.sol\"\n    object \"Greeter_14_deployed\" {\n        code {\n            {\n                /// @src 0:62:262  \"contract Greeter {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0xa4136862 {\n                        if callvalue() { revert(_3, _3) }\n                        let _4 := 32\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_3, _3) }\n                        let offset := calldataload(4)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let _6 := calldataload(add(4, offset))\n                        if gt(_6, _5)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_3, 36)\n                        }\n                        let _7 := not(31)\n                        finalize_allocation(_1, add(and(add(_6, 0x1f), _7), _4))\n                        mstore(_1, _6)\n                        if gt(add(add(offset, _6), 36), calldatasize()) { revert(_3, _3) }\n                        calldatacopy(add(_1, _4), add(offset, 36), _6)\n                        mstore(add(add(_1, _6), _4), _3)\n                        let newLen := mload(_1)\n                        if gt(newLen, _5)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_3, 36)\n                        }\n                        let _8 := extract_byte_array_length(sload(_3))\n                        if gt(_8, 0x1f)\n                        {\n                            mstore(_3, _3)\n                            let _9 := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let deleteStart := add(_9, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, _4) { deleteStart := _9 }\n                            let _10 := add(_9, shr(5, add(_8, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _10) { start := add(start, 1) }\n                            { sstore(start, _3) }\n                        }\n                        let srcOffset := _3\n                        srcOffset := _4\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, _7)\n                            mstore(_3, _3)\n                            let dstPtr := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _3\n                            for { } lt(i, loopEnd) { i := add(i, _4) }\n                            {\n                                sstore(dstPtr, mload(add(_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _4)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(_3, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value := _3\n                            if newLen\n                            {\n                                value := mload(add(_1, srcOffset))\n                            }\n                            sstore(_3, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0xef690cc0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr := mload(_2)\n                        let ret := _3\n                        let slotValue := sload(_3)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _11 := 0x20\n                        let _12 := 1\n                        switch and(slotValue, _12)\n                        case 0 {\n                            mstore(add(memPtr, _11), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _11)\n                        }\n                        case 1 {\n                            mstore(_3, _3)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i_1 := _3\n                            for { } lt(i_1, length) { i_1 := add(i_1, _11) }\n                            {\n                                mstore(add(add(memPtr, i_1), _11), sload(dataPos))\n                                dataPos := add(dataPos, _12)\n                            }\n                            ret := add(add(memPtr, i_1), _11)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _11)\n                        let length_1 := mload(memPtr)\n                        mstore(add(memPos, _11), length_1)\n                        let i_2 := _3\n                        for { } lt(i_2, length_1) { i_2 := add(i_2, _11) }\n                        {\n                            mstore(add(add(memPos, i_2), _2), mload(add(add(memPtr, i_2), _11)))\n                        }\n                        mstore(add(add(memPos, length_1), _2), _3)\n                        return(memPos, add(sub(add(memPos, and(add(length_1, 31), not(31))), memPos), _2))\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208a97062e732c0501b5dc9445a855bdc15c88aaa4ec5475272f347d3160670a4f64736f6c63430008110033\"\n    }\n}\n","hash":"0100005767e2b062248ba771c5e55958d51b0cfb4dda2fef7a7d3a55842e9957","factoryDependencies":{}}},"contracts/bulkSender.sol":{"bulkSender":{"abi":[{"inputs":[],"name":"etherNotSent","type":"error"},{"inputs":[],"name":"msgValueIncorrect","type":"error"},{"inputs":[{"internalType":"address[]","name":"myArray","type":"address[]"}],"name":"bulkSend","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"etherNotSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"msgValueIncorrect\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"myArray\",\"type\":\"address[]\"}],\"name\":\"bulkSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bulkSender.sol\":\"bulkSender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/bulkSender.sol\":{\"keccak256\":\"0x4913265e2f39a89d1a19943fffc7270764cabacf90b9e286a652426b060185b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e4034e4428988789e371bf6ab8f1cb3a9eb81ce11fa621f1ab038cd356fc97f\",\"dweb:/ipfs/QmPrXS8Sirw2GD2BFVYeMdsGKrW9WyJnDG1RNcmezzNNbf\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"bulkSender.sol:bulkSender\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s!\t4, r3, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tadd\t@CPI0_4[0], r0, r4\n\tsub.s!\t32, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t0, r2, r6\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tadd\tr5, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_4[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_4[0], r3, r3\n\tand\t@CPI0_4[0], r4, r4\n\tsub!\tr4, r3, r7\n\tadd.ge\t0, r0, r5\n\txor\tr4, r3, r3\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr1, r3, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_6[0], r3, r1\n\tjump.ge\t@.BB0_10\n\tshl.s\t5, r3, r4\n\tadd\t191, r4, r1\n\tsub.s\t32, r0, r5\n\tadd\tr5, r0, stack-[2]\n\tand\tr1, r5, r1\n\tsub.s!\t@CPI0_5[0], r1, r5\n\tjump.le\t@.BB0_12\n.BB0_10:\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tst.1\t64, r1\n\tst.1\t128, r3\n\tadd\t36, r2, r1\n\tadd\tr4, r1, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub!\tr2, r4, r4\n\tjump.le\t@.BB0_13\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_13:\n\tsub.s!\t0, r3, r3\n\tadd\tr0, r0, r3\n\tjump.ne\t@.BB0_14\n.BB0_20:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB0_23\n\tld.1\t128, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_25\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r9\n.BB0_26:\n\tshl.s\t5, r9, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_7[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB0_29\n\tadd\tstack[@returndatasize], r0, r1\n\tadd\tstack-[1], r0, r2\n\tjump\t@.BB0_28\n.BB0_29:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tadd\tr0, r0, r5\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_28:\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_5[0], r1, r3\n\tjump.gt\t@.BB0_10\n\tadd\t63, r1, r3\n\tadd\tstack-[2], r0, r4\n\tand\tr3, r4, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_10\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_10\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_39\n\tadd\tr0, r0, r6\n.BB0_36:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_36\n.BB0_39:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_30\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r1\n\tshl.s\t3, r5, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB0_30:\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB0_38\n\tadd\t1, r9, r9\n\tld.1\t128, r1\n\tsub!\tr9, r1, r1\n\tjump.lt\t@.BB0_26\n.BB0_25:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t160, r0, r3\n.BB0_15:\n\tptr.add\tstack[@ptr_calldata], r1, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_7[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr3, r4, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_15\n\tld.1\t128, r1\n\tsub.s!\t0, r1, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_20\n\tmul\t@CPI0_8[0], r1, r3, r2\n\tdiv\tr3, r1, r1, r2\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.eq\t@.BB0_20\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tld.1\t64, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tld.1\t64, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell 53940493052110396053092178114929041828797185556214386298072017031572882456576\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 18446744073709551616\nCPI0_7:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_8:\n\t.cell 1000000000000000000\nCPI0_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_10:\n\t.cell 2852213850513516153367582212096\nCPI0_11:\n\t.cell 52797336099452434601287997197192511272031351023826888661780782656812333662208\nCPI0_12:\n\t.cell 316912650057057350374175801344\nCPI0_13:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_14:\n\t.cell -28405655231773339186865215245487663411985402156206803549948351868442746290176\n","bytecode":{"object":"00040000000000020003000000000002000000000301001900000060033002700000003a04300197000300000041035500020000000103550000003a0030019d000100000000001f0000008001000039000000400010043f0000000101200190000000470000c13d0000000003000031000000040130008c000000560000413d0000000201000367000000000201043b0000003c022001970000003d0220009c000000560000c13d000000040230008a0000003e04000041000000200520008c000000000500001900000000050440190000003e02200197000000000620004c000000000400a0190000003e0220009c00000000020500190000000002046019000000000220004c000000560000c13d0000000402100370000000000202043b0000003f0420009c000000560000213d00000023042000390000003e05000041000000000634004b000000000600001900000000060580190000003e033001970000003e04400197000000000734004b0000000005008019000000000334013f0000003e0330009c00000000030600190000000003056019000000000330004c000000560000c13d0000000403200039000000000131034f000000000301043b000000400130009c000000410000813d0000000504300210000000bf01400039000000200500008a000200000005001d000000000151016f0000003f0510009c0000004f0000a13d000000430100004100000000001004350000004101000039000000040010043f0000004401000041000000e4000104300000000001000416000000000110004c000000560000c13d0000002001000039000001000010044300000120000004430000003b01000041000000e30001042e000000400010043f000000800030043f000000240120003900000000021400190000000004000031000000000442004b000000580000a13d0000000001000019000000e400010430000000000330004c0000000003000019000000b40000c13d0000000001000416000000000131004b000000cb0000c13d000000800100043d000000000110004c000000b20000613d0000000101000039000100000001001d00000000090000190000000501900210000000a001100039000000000201043300000000010004140000004104200197000000040240008c0000006e0000c13d000000010100003100000001020000290000007e0000013d0000003a020000410000003a0310009c0000000001028019000000c00110021000000047011001c7000080090200003900000042030000410000000005000019000300000009001d00e200dd0000040f0000000309000029000000010220018f000300000001035500000060011002700001003a0010019d0000003a01100197000000000310004c000000ac0000613d0000003f0310009c000000410000213d0000003f031000390000000204000029000000000443016f000000400300043d0000000004430019000000000534004b000000000500001900000001050040390000003f0640009c000000410000213d0000000105500190000000410000c13d000000400040043f00000000011304360000000303000367000000010500003100000005045002720000009d0000613d000000000600001900000005076002100000000008710019000000000773034f000000000707043b00000000007804350000000106600039000000000746004b000000950000413d0000001f05500190000000ac0000613d0000000504400210000000000343034f00000000014100190000000304500210000000000501043300000000054501cf000000000545022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000353019f0000000000310435000000000120004c000000d40000613d0000000109900039000000800100043d000000000119004b000000640000413d0000000001000019000000e30001042e000000a0030000390000000204100367000000000404043b000000410540009c000000560000213d00000000034304360000002001100039000000000421004b000000b50000413d000000800100043d000000000210004c00000000030000190000005b0000613d00000042231000d100000000211300d9000000420110009c0000005b0000613d000000430100004100000000001004350000001101000039000000040010043f0000004401000041000000e400010430000000400100043d000000450200004100000000002104350000003a020000410000003a0310009c0000000001028019000000400110021000000046011001c7000000e400010430000000400100043d000000480200004100000000002104350000003a020000410000003a0310009c0000000001028019000000400110021000000046011001c7000000e400010430000000e0002104210000000102000039000000000001042d0000000002000019000000000001042d000000e200000432000000e30001042e000000e40001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000077413cb6000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000de0b6b3a76400004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000074ba3bb60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000200000000000000000000000000000000000000000000000000000000000000c132f8090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002d15877d858e13b0f2bb72588f740093199c962f6208f1439b6b83257e6dcfd5"},"methodIdentifiers":{"bulkSend(address[])":"77413cb6"}},"irOptimized":"/// @use-src 1:\"contracts/bulkSender.sol\"\nobject \"bulkSender_74\" {\n    code {\n        {\n            /// @src 1:107:498  \"contract bulkSender {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"bulkSender_74_deployed\")\n            codecopy(_1, dataoffset(\"bulkSender_74_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"contracts/bulkSender.sol\"\n    object \"bulkSender_74_deployed\" {\n        code {\n            {\n                /// @src 1:107:498  \"contract bulkSender {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    if eq(0x77413cb6, shr(224, calldataload(_3)))\n                    {\n                        let _4 := 32\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let _6 := calldataload(add(_2, offset))\n                        let _7 := 36\n                        if gt(_6, _5)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, _7)\n                        }\n                        let _8 := 5\n                        let _9 := shl(_8, _6)\n                        let dst := allocate_memory(add(_9, _4))\n                        let dst_1 := dst\n                        mstore(dst, _6)\n                        dst := add(dst, _4)\n                        let srcEnd := add(add(offset, _9), _7)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset, _7)\n                        for { } lt(src, srcEnd) { src := add(src, _4) }\n                        {\n                            let value := calldataload(src)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                            mstore(dst, value)\n                            dst := add(dst, _4)\n                        }\n                        /// @src 1:220:234  \"myArray.length\"\n                        let expr := /** @src 1:107:498  \"contract bulkSender {...\" */ mload(/** @src 1:220:234  \"myArray.length\" */ dst_1)\n                        /// @src 1:238:245  \"1 ether\"\n                        let _10 := 0x0de0b6b3a7640000\n                        /// @src 1:107:498  \"contract bulkSender {...\"\n                        let product := mul(expr, /** @src 1:238:245  \"1 ether\" */ _10)\n                        /// @src 1:107:498  \"contract bulkSender {...\"\n                        if iszero(or(iszero(expr), eq(/** @src 1:238:245  \"1 ether\" */ _10, /** @src 1:107:498  \"contract bulkSender {...\" */ div(product, expr))))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, _7)\n                        }\n                        /// @src 1:203:276  \"if(msg.value != (myArray.length * (1 ether)) ) revert msgValueIncorrect()\"\n                        if /** @src 1:206:247  \"msg.value != (myArray.length * (1 ether))\" */ iszero(eq(/** @src 1:206:215  \"msg.value\" */ callvalue(), /** @src 1:206:247  \"msg.value != (myArray.length * (1 ether))\" */ product))\n                        /// @src 1:203:276  \"if(msg.value != (myArray.length * (1 ether)) ) revert msgValueIncorrect()\"\n                        {\n                            /// @src 1:257:276  \"msgValueIncorrect()\"\n                            let _11 := /** @src 1:107:498  \"contract bulkSender {...\" */ mload(_1)\n                            /// @src 1:257:276  \"msgValueIncorrect()\"\n                            mstore(_11, shl(225, 0x3a5d1ddb))\n                            revert(_11, /** @src 1:107:498  \"contract bulkSender {...\" */ _2)\n                        }\n                        /// @src 1:291:304  \"uint256 i = 0\"\n                        let var_i := /** @src 1:107:498  \"contract bulkSender {...\" */ _3\n                        /// @src 1:286:490  \"for (uint256 i = 0; i < myArray.length;) {...\"\n                        for { }\n                        /** @src 1:107:498  \"contract bulkSender {...\" */ 1\n                        /// @src 1:291:304  \"uint256 i = 0\"\n                        { }\n                        {\n                            /// @src 1:306:324  \"i < myArray.length\"\n                            if iszero(lt(var_i, /** @src 1:107:498  \"contract bulkSender {...\" */ mload(/** @src 1:310:324  \"myArray.length\" */ dst_1)))\n                            /// @src 1:306:324  \"i < myArray.length\"\n                            { break }\n                            /// @src 1:357:392  \"myArray[i].call{value: 1 ether}(\\\"\\\")\"\n                            let expr_component := call(gas(), /** @src 1:107:498  \"contract bulkSender {...\" */ and(mload(add(add(dst_1, shl(_8, var_i)), _4)), sub(shl(160, 1), 1)), /** @src 1:238:245  \"1 ether\" */ _10, /** @src 1:107:498  \"contract bulkSender {...\" */ _3, _3, _3, _3)\n                            switch returndatasize()\n                            case 0 { }\n                            default {\n                                let _12 := returndatasize()\n                                if gt(_12, _5)\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x41)\n                                    revert(_3, _7)\n                                }\n                                let memPtr := allocate_memory(add(and(add(_12, 0x1f), not(31)), _4))\n                                mstore(memPtr, _12)\n                                returndatacopy(add(memPtr, _4), _3, returndatasize())\n                            }\n                            /// @src 1:406:445  \"if(sent == false) revert etherNotSent()\"\n                            if /** @src 1:107:498  \"contract bulkSender {...\" */ iszero(/** @src 1:409:422  \"sent == false\" */ expr_component)\n                            /// @src 1:406:445  \"if(sent == false) revert etherNotSent()\"\n                            {\n                                /// @src 1:431:445  \"etherNotSent()\"\n                                let _13 := /** @src 1:107:498  \"contract bulkSender {...\" */ mload(_1)\n                                /// @src 1:431:445  \"etherNotSent()\"\n                                mstore(_13, shl(224, 0xc132f809))\n                                revert(_13, /** @src 1:107:498  \"contract bulkSender {...\" */ _2)\n                            }\n                            /// @src 1:471:477  \"i += 1\"\n                            var_i := /** @src 1:107:498  \"contract bulkSender {...\" */ add(/** @src 1:471:477  \"i += 1\" */ var_i, /** @src 1:107:498  \"contract bulkSender {...\" */ 1)\n                        }\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c95f8519bed624f10b8ecd98a665c0802e88cda91b821ff87ff901583065c03064736f6c63430008110033\"\n    }\n}\n","hash":"0100004b666ecdab6b5fe2a1bc55c8be1a456b697c21a38d38128300add5503c","factoryDependencies":{}}}}}}