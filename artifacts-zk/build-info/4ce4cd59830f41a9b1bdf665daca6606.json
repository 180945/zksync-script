{"id":"4ce4cd59830f41a9b1bdf665daca6606","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/Greeter.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity 0.8.17;\n\ncontract Greeter {\n    \n    string public greeting;\n\n    function setGreeting(string calldata _greeting) public { //calldata is immutable cheaper than memory. \n        greeting = _greeting;\n    }\n    \n}\n"},"contracts/SimpleStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ncontract SimpleStorage {\n    uint256 public storedData; //Do not set 0 manually it wastes gas!\n\n    event setEvent();\n\n    function set(uint256 x) public {\n        storedData = x;\n        emit setEvent();\n    }\n\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Linux.g++","zk_version":"1.3.10","sources":{"contracts/Greeter.sol":{"id":0,"ast":{"absolutePath":"contracts/Greeter.sol","exportedSymbols":{"Greeter":[14]},"id":15,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"37:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Greeter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":14,"linearizedBaseContracts":[14],"name":"Greeter","nameLocation":"71:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ef690cc0","id":3,"mutability":"mutable","name":"greeting","nameLocation":"104:8:0","nodeType":"VariableDeclaration","scope":14,"src":"90:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2,"name":"string","nodeType":"ElementaryTypeName","src":"90:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":12,"nodeType":"Block","src":"174:83:0","statements":[{"expression":{"id":10,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"230:8:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9,"name":"_greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"241:9:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"230:20:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11,"nodeType":"ExpressionStatement","src":"230:20:0"}]},"functionSelector":"a4136862","id":13,"implemented":true,"kind":"function","modifiers":[],"name":"setGreeting","nameLocation":"128:11:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_greeting","nameLocation":"156:9:0","nodeType":"VariableDeclaration","scope":13,"src":"140:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"140:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"139:27:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"174:0:0"},"scope":14,"src":"119:138:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":15,"src":"62:202:0","usedErrors":[]}],"src":"37:228:0"}},"contracts/SimpleStorage.sol":{"id":1,"ast":{"absolutePath":"contracts/SimpleStorage.sol","exportedSymbols":{"SimpleStorage":[34]},"id":35,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":16,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":34,"linearizedBaseContracts":[34],"name":"SimpleStorage","nameLocation":"66:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"2a1afcd9","id":18,"mutability":"mutable","name":"storedData","nameLocation":"101:10:1","nodeType":"VariableDeclaration","scope":34,"src":"86:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"86:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"24a4f809cc1bf5b0f3c16b615535b56a0b583b1630e06e32b46b759b8088a95d","id":20,"name":"setEvent","nameLocation":"163:8:1","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"171:2:1"},"src":"157:17:1"},{"body":{"id":32,"nodeType":"Block","src":"211:56:1","statements":[{"expression":{"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":25,"name":"storedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"221:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":26,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"234:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"221:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28,"nodeType":"ExpressionStatement","src":"221:14:1"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":29,"name":"setEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"250:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"250:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":31,"nodeType":"EmitStatement","src":"245:15:1"}]},"functionSelector":"60fe47b1","id":33,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"189:3:1","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"x","nameLocation":"201:1:1","nodeType":"VariableDeclaration","scope":33,"src":"193:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"193:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:11:1"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"211:0:1"},"scope":34,"src":"180:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":35,"src":"57:213:1","usedErrors":[]}],"src":"32:239:1"}}},"contracts":{"contracts/Greeter.sol":{"Greeter":{"abi":[{"inputs":[],"name":"greeting","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"setGreeting","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0xb18918b5f77a6fc5d97e5b84928420705121d42e7c93633ee12608904f585395\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6f2e085c3c934b24303de8ef082ab92dafcdc10a4e60755c42f6310d82699bbe\",\"dweb:/ipfs/QmbnLPxLdZRwgVXGtghKuy2YfTTr4ZuxRQJnKjgU3VyaJg\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Greeter.sol:Greeter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t32, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_4[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_4[0], r3, r7\n\tand\t@CPI0_4[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r2\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r3\n\tand!\t1, r3, r4\n\tshr.s\t1, r3, r3\n\tand\t127, r3, r5\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t31, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\tand\t1, r5, r5\n\tsub!\tr4, r5, r4\n\tjump.ne\t@.BB0_14\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_18\n\tadd\t31, r1, r4\n\tshr.s\t5, r4, r4\n\tadd\t@CPI0_5[0], r4, r4\n\tadd\t@CPI0_5[0], r0, r5\n\tsub.s!\t32, r1, r6\n\tadd.lt\tr5, r0, r4\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_5[0], r3, r3\n\tsub!\tr4, r3, r5\n\tjump.ge\t@.BB0_18\n.BB0_19:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_19\n.BB0_18:\n\tsub.s!\t31, r1, r3\n\tjump.le\t@.BB0_27\n\tsub.s\t32, r0, r3\n\tand!\tr1, r3, r5\n\tadd\t@CPI0_5[0], r0, r3\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_24\n\tadd\t@CPI0_5[0], r0, r3\n\tadd\tr0, r0, r4\n.BB0_23:\n\tadd\tr4, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsstore\tr3, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB0_23\n.BB0_24:\n\tsub!\tr5, r1, r5\n\tjump.ge\t@.BB0_26\n\tshl.s\t3, r1, r5\n\tand\t248, r5, r5\n\tsub.s\t1, r0, r6\n\tshr\tr6, r5, r5\n\txor\tr5, r6, r5\n\tadd\tr4, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tand\tr2, r5, r2\n\tsstore\tr3, r2\n.BB0_26:\n\tadd\t1, r0, r2\n\tshl.s\t1, r1, r3\n\tjump\t@.BB0_20\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_30:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_32\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_32:\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r3\n\tadd.eq\tr2, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\txor\tr4, r1, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_33\n.BB0_14:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_33:\n\tld.1\t64, r2\n\tst.1.inc\tr2, r3, r1\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB0_36\n\tst.1\t0, r0\n\tsub.s!\t0, r3, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_34\n\tadd\t@CPI0_5[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_39:\n\tadd\tr1, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_39\n\tjump\t@.BB0_34\n.BB0_36:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr1, r4\n\tsub.s!\t0, r3, r3\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_34:\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r5\n\tadd\tr5, r2, r3\n\tsub!\tr3, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_6[0], r3, r6\n\tjump.gt\t@.BB0_40\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r3\n\tadd\t32, r0, r5\n\tst.1.inc\tr3, r5, r5\n\tld.1\tr2, r2\n\tst.1\tr5, r2\n\tsub.s!\t0, r2, r5\n\tjump.ne\t@.BB0_43\n\tadd\t64, r3, r5\n\tjump\t@.BB0_45\n.BB0_40:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_43:\n\tadd\t64, r3, r5\n\tadd\tr0, r0, r6\n.BB0_44:\n\tadd\tr6, r5, r7\n\tadd\tr1, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB0_44\n.BB0_45:\n\tadd\tr5, r2, r1\n\tst.1\tr1, r0\n\tadd\t95, r2, r1\n\tand\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_27:\n\tsub.s!\t0, r1, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_29\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r3\n.BB0_29:\n\tshl.s\t3, r1, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tand\tr3, r2, r3\n\tshl.s\t1, r1, r2\n.BB0_20:\n\tor\tr3, r2, r1\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 4016639168\nCPI0_3:\n\t.cell 2752735330\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_6:\n\t.cell 18446744073709551615\nCPI0_7:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_8:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"000200000000000200010000000103550000006001100270000000410010019d0000008001000039000000400010043f00000001012001900000007c0000c13d0000000001000031000000040110008c000000950000413d0000000101000367000000000101043b000000e001100270000000430210009c000000840000613d000000440110009c000000950000c13d0000000001000416000000000110004c000000950000c13d0000000003000031000000040130008a0000004502000041000000200410008c000000000400001900000000040240190000004501100197000000000510004c000000000200a019000000450110009c00000000010400190000000001026019000000000110004c000000950000c13d00000001010003670000000402100370000000000202043b000000470420009c000000950000213d00000023042000390000004505000041000000000634004b0000000006000019000000000605801900000045073001970000004504400197000000000874004b0000000005008019000000000474013f000000450440009c00000000040600190000000004056019000000000440004c000000950000c13d0000000404200039000000000141034f000000000101043b000000470410009c000000950000213d00000024022000390000000004210019000000000334004b000000950000213d000000000300041a000000010430019000000001033002700000007f0530018f00000000030560190000001f0530008c00000000050000190000000105002039000000010550018f000000000454004b000000a30000c13d000000200430008c0000005c0000413d0000001f04100039000000050440027000000046044000410000004605000041000000200610008c00000000040540190000001f0330003900000005033002700000004603300041000000000534004b0000005c0000813d000000000004041b0000000104400039000000000534004b000000580000413d0000001f0310008c000000f10000a13d000000200300008a0000000005310170000000460300004100000000040000190000006d0000613d0000004603000041000000000400001900000000062400190000000106600367000000000606043b000000000063041b00000001033000390000002004400039000000000654004b000000650000413d000000000515004b000000790000813d0000000305100210000000f80550018f000000010600008a000000000556022f000000000565013f00000000022400190000000102200367000000000202043b000000000252016f000000000023041b00000001020000390000000103100210000000fc0000013d0000000001000416000000000110004c000000950000c13d0000002001000039000001000010044300000120000004430000004201000041000001010001042e0000000001000416000000000110004c000000950000c13d000000040100008a00000000011000310000004502000041000000000310004c000000000300001900000000030240190000004501100197000000000410004c000000000200a019000000450110009c00000000010300190000000001026019000000000110004c000000970000613d00000000010000190000010200010430000000000400041a000000010540019000000001014002700000007f0210018f000000000301001900000000030260190000001f0130008c00000000010000190000000101002039000000000114013f0000000101100190000000a90000613d000000480100004100000000001004350000002201000039000000040010043f00000049010000410000010200010430000000400200043d0000000001320436000000000550004c000000bb0000613d0000000000000435000000000430004c0000000004000019000000c10000613d000000460500004100000000040000190000000006410019000000000705041a000000000076043500000001055000390000002004400039000000000634004b000000b30000413d000000c10000013d000001000500008a000000000454016f0000000000410435000000000330004c000000200400003900000000040060190000003f03400039000000200400008a000000000543016f0000000003250019000000000553004b00000000050000190000000105004039000000470630009c000000d50000213d0000000105500190000000d50000c13d000000400030043f0000002005000039000000000553043600000000020204330000000000250435000000000520004c000000db0000c13d0000004005300039000000e40000013d000000480100004100000000001004350000004101000039000000040010043f000000490100004100000102000104300000004005300039000000000600001900000000075600190000000008610019000000000808043300000000008704350000002006600039000000000726004b000000dd0000413d000000000125001900000000000104350000005f01200039000000000141016f0000004102000041000000410410009c0000000001028019000000410430009c000000000203401900000040022002100000006001100210000000000121019f000001010001042e000000000310004c0000000003000019000000f60000613d0000000102200367000000000302043b0000000302100210000000010400008a000000000224022f000000000242013f000000000323016f0000000102100210000000000123019f000000000010041b0000000001000019000001010001042e0000010000000432000001010001042e0000010200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000ef690cc000000000000000000000000000000000000000000000000000000000a41368628000000000000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563000000000000000000000000000000000000000000000000ffffffffffffffff4e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000003fdbbd347ebb2a8552595be9be3c3499675ae8357a8ab1db89d80b4be6855310"},"methodIdentifiers":{"greeting()":"ef690cc0","setGreeting(string)":"a4136862"}},"irOptimized":"/// @use-src 0:\"contracts/Greeter.sol\"\nobject \"Greeter_14\" {\n    code {\n        {\n            /// @src 0:62:264  \"contract Greeter {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Greeter_14_deployed\")\n            codecopy(_1, dataoffset(\"Greeter_14_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/Greeter.sol\"\n    object \"Greeter_14_deployed\" {\n        code {\n            {\n                /// @src 0:62:264  \"contract Greeter {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0xa4136862 {\n                        if callvalue() { revert(_2, _2) }\n                        let _3 := 32\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_2, _2) }\n                        let offset := calldataload(4)\n                        let _4 := 0xffffffffffffffff\n                        if gt(offset, _4) { revert(_2, _2) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, _4) { revert(_2, _2) }\n                        let _5 := 36\n                        if gt(add(add(offset, length), _5), calldatasize()) { revert(_2, _2) }\n                        let _6 := extract_byte_array_length(sload(_2))\n                        if gt(_6, 0x1f)\n                        {\n                            let _7 := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let deleteStart := add(_7, shr(5, add(length, 0x1f)))\n                            if lt(length, _3) { deleteStart := _7 }\n                            let _8 := add(_7, shr(5, add(_6, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _8) { start := add(start, 1) }\n                            { sstore(start, _2) }\n                        }\n                        let srcOffset := _2\n                        switch gt(length, 0x1f)\n                        case 1 {\n                            let loopEnd := and(length, not(31))\n                            let dstPtr := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _2\n                            for { } lt(i, loopEnd) { i := add(i, _3) }\n                            {\n                                sstore(dstPtr, calldataload(add(add(offset, srcOffset), _5)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _3)\n                            }\n                            if lt(loopEnd, length)\n                            {\n                                sstore(dstPtr, and(calldataload(add(add(offset, srcOffset), _5)), not(shr(and(shl(3, length), 248), not(0)))))\n                            }\n                            sstore(_2, add(shl(1, length), 1))\n                        }\n                        default {\n                            let value := _2\n                            if length\n                            {\n                                value := calldataload(add(add(offset, srcOffset), _5))\n                            }\n                            sstore(_2, or(and(value, not(shr(shl(3, length), not(0)))), shl(1, length)))\n                        }\n                        return(_2, _2)\n                    }\n                    case 0xef690cc0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPtr := mload(_1)\n                        let ret := _2\n                        let slotValue := sload(_2)\n                        let length_1 := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length_1)\n                        let _9 := 0x20\n                        let _10 := 1\n                        switch and(slotValue, _10)\n                        case 0 {\n                            mstore(add(memPtr, _9), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _9)\n                        }\n                        case 1 {\n                            mstore(_2, _2)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i_1 := _2\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _9) }\n                            {\n                                mstore(add(add(memPtr, i_1), _9), sload(dataPos))\n                                dataPos := add(dataPos, _10)\n                            }\n                            ret := add(add(memPtr, i_1), _9)\n                        }\n                        let _11 := not(31)\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), _11))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        mstore(_1, newFreePtr)\n                        mstore(newFreePtr, _9)\n                        let length_2 := mload(memPtr)\n                        mstore(add(newFreePtr, _9), length_2)\n                        let i_2 := _2\n                        for { } lt(i_2, length_2) { i_2 := add(i_2, _9) }\n                        {\n                            mstore(add(add(newFreePtr, i_2), _1), mload(add(add(memPtr, i_2), _9)))\n                        }\n                        mstore(add(add(newFreePtr, length_2), _1), _2)\n                        return(newFreePtr, add(sub(add(newFreePtr, and(add(length_2, 31), _11)), newFreePtr), _1))\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220bc656411ffa12af3edf01dd770cc8be356a0276a5fbfc7f0c76da8d2ce4dd25f64736f6c63430008110033\"\n    }\n}\n","hash":"0100004b431ccdf33ba6334cf87c75cbd900b958c48d0af675f803e44517c6b8","factoryDependencies":{}}},"contracts/SimpleStorage.sol":{"SimpleStorage":{"abi":[{"anonymous":false,"inputs":[],"name":"setEvent","type":"event"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"storedData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"setEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storedData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleStorage.sol\":{\"keccak256\":\"0xecef16c5707affa44390bfb08708f698d28f5e8688785309953457a3770ce256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d9f5f1ddf30084aeaa310b9c760ec25d076b68c3cb998e1a0cfbc1b2e57dd0\",\"dweb:/ipfs/QmRdXZQAjtrjaf7JnVUNHYtwnaWCwu8g7aBzFsVrVtrmWm\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SimpleStorage.sol:SimpleStorage\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 1627277233\nCPI0_3:\n\t.cell 706411737\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\n\t.cell 16574737364849978542381574202311943282479107225778549955976654474212914276701\nCPI0_7:\n\t.cell 2535301202817642044428229017600\n","bytecode":{"object":"000200000000000200010000000103550000006001100270000000180010019d0000008001000039000000400010043f0000000101200190000000270000c13d0000000001000031000000040110008c000000520000413d0000000101000367000000000101043b000000e0011002700000001a0210009c0000002f0000613d0000001b0110009c000000520000c13d0000000001000416000000000110004c000000520000c13d000000040100008a00000000011000310000001c02000041000000000310004c000000000300001900000000030240190000001c01100197000000000410004c000000000200a0190000001c0110009c00000000010300190000000001026019000000000110004c000000520000c13d000000000100041a000000800010043f0000001f010000410000005a0001042e0000000001000416000000000110004c000000520000c13d00000020010000390000010000100443000001200000044300000019010000410000005a0001042e0000000001000416000000000110004c000000520000c13d000000040100008a00000000011000310000001c02000041000000200310008c000000000300001900000000030240190000001c01100197000000000410004c000000000200a0190000001c0110009c00000000010300190000000001026019000000000110004c000000520000c13d00000004010000390000000101100367000000000101043b000000000010041b00000018010000410000000002000414000000180320009c0000000001024019000000c0011002100000001d011001c70000800d0200003900000001030000390000001e04000041005900540000040f0000000101200190000000520000613d00000000010000190000005a0001042e00000000010000190000005b0001043000000057002104210000000102000039000000000001042d0000000002000019000000000001042d00000059000004320000005a0001042e0000005b00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000060fe47b1000000000000000000000000000000000000000000000000000000002a1afcd98000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000024a4f809cc1bf5b0f3c16b615535b56a0b583b1630e06e32b46b759b8088a95d0000000000000000000000000000000000000020000000800000000000000000f623b9b4bb8481a85469ef8bbf371b7a2e8c96a86957f02faf5c8d43c5cd235c"},"methodIdentifiers":{"set(uint256)":"60fe47b1","storedData()":"2a1afcd9"}},"irOptimized":"/// @use-src 1:\"contracts/SimpleStorage.sol\"\nobject \"SimpleStorage_34\" {\n    code {\n        {\n            /// @src 1:57:270  \"contract SimpleStorage {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SimpleStorage_34_deployed\")\n            codecopy(_1, dataoffset(\"SimpleStorage_34_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"contracts/SimpleStorage.sol\"\n    object \"SimpleStorage_34_deployed\" {\n        code {\n            {\n                /// @src 1:57:270  \"contract SimpleStorage {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x2a1afcd9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        mstore(_1, sload(_2))\n                        return(_1, 32)\n                    }\n                    case 0x60fe47b1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        sstore(_2, calldataload(4))\n                        /// @src 1:250:260  \"setEvent()\"\n                        log1(/** @src 1:57:270  \"contract SimpleStorage {...\" */ _2, _2, /** @src 1:250:260  \"setEvent()\" */ 0x24a4f809cc1bf5b0f3c16b615535b56a0b583b1630e06e32b46b759b8088a95d)\n                        /// @src 1:57:270  \"contract SimpleStorage {...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200c0bc184a2f8645e14f33da50cb8190ae8a84934dd740b1252e08824c1dd592964736f6c63430008110033\"\n    }\n}\n","hash":"0100002191b17d2cf0029d98e57f4b77ecc96b87da71e6935b8f0caf8c104757","factoryDependencies":{}}}}}}